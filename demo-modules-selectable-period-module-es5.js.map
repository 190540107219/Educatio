{"version":3,"sources":["webpack:///projects/demos/app/demo-modules/demo-utils/calendar-header.component.ts","webpack:///projects/demos/app/demo-modules/demo-utils/module.ts","webpack:///projects/demos/app/demo-modules/selectable-period/component.ts","webpack:///projects/demos/app/demo-modules/selectable-period/template.html","webpack:///projects/demos/app/demo-modules/selectable-period/module.ts"],"names":["CalendarHeaderComponent","locale","viewChange","viewDateChange","CalendarView","viewDate","selector","template","DemoUtilsModule","imports","declarations","exports","DemoComponent","view","Month","Date","events","selectedDays","day","selectedMonthViewDay","selectedDateTime","date","getTime","dateIndex","findIndex","selectedDay","cssClass","splice","push","body","forEach","some","selectedDayViewDate","addSelectedDayViewClass","event","hourColumns","column","hours","hourSegment","segments","segment","changeDetection","OnPush","templateUrl","styles","encapsulation","None","DemoModule","forRoot","provide","useFactory","forChild","path","component"],"mappings":"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","file":"demo-modules-selectable-period-module-es5.js","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CalendarView } from 'angular-calendar';\n\n@Component({\n  selector: 'mwl-demo-utils-calendar-header',\n  template: `\n    <div class=\"row text-center\">\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarPreviousView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Previous\n          </div>\n          <div\n            class=\"btn btn-outline-secondary\"\n            mwlCalendarToday\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Today\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarNextView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Next\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <h3>{{ viewDate | calendarDate: view + 'ViewTitle':locale }}</h3>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Month)\"\n            [class.active]=\"view === CalendarView.Month\"\n          >\n            Month\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Week)\"\n            [class.active]=\"view === CalendarView.Week\"\n          >\n            Week\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Day)\"\n            [class.active]=\"view === CalendarView.Day\"\n          >\n            Day\n          </div>\n        </div>\n      </div>\n    </div>\n    <br />\n  `,\n})\nexport class CalendarHeaderComponent {\n  @Input() view: CalendarView;\n\n  @Input() viewDate: Date;\n\n  @Input() locale: string = 'en';\n\n  @Output() viewChange = new EventEmitter<CalendarView>();\n\n  @Output() viewDateChange = new EventEmitter<Date>();\n\n  CalendarView = CalendarView;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CalendarModule } from 'angular-calendar';\nimport { CalendarHeaderComponent } from './calendar-header.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CalendarModule],\n  declarations: [CalendarHeaderComponent],\n  exports: [CalendarHeaderComponent],\n})\nexport class DemoUtilsModule {}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  CalendarMonthViewDay,\n  CalendarView,\n  CalendarWeekViewBeforeRenderEvent,\n} from 'angular-calendar';\nimport { WeekViewHour, WeekViewHourColumn } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n  // don't do this in your app, its only so the styles get applied globally\n  styles: [\n    `\n      .cal-day-selected,\n      .cal-day-selected:hover {\n        background-color: deeppink !important;\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DemoComponent {\n  view: CalendarView = CalendarView.Month;\n\n  viewDate: Date = new Date();\n\n  selectedMonthViewDay: CalendarMonthViewDay;\n\n  selectedDayViewDate: Date;\n\n  hourColumns: WeekViewHourColumn[];\n\n  events: CalendarEvent[] = [];\n\n  selectedDays: any = [];\n\n  dayClicked(day: CalendarMonthViewDay): void {\n    this.selectedMonthViewDay = day;\n    const selectedDateTime = this.selectedMonthViewDay.date.getTime();\n    const dateIndex = this.selectedDays.findIndex(\n      (selectedDay) => selectedDay.date.getTime() === selectedDateTime\n    );\n    if (dateIndex > -1) {\n      delete this.selectedMonthViewDay.cssClass;\n      this.selectedDays.splice(dateIndex, 1);\n    } else {\n      this.selectedDays.push(this.selectedMonthViewDay);\n      day.cssClass = 'cal-day-selected';\n      this.selectedMonthViewDay = day;\n    }\n  }\n\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): void {\n    body.forEach((day) => {\n      if (\n        this.selectedDays.some(\n          (selectedDay) => selectedDay.date.getTime() === day.date.getTime()\n        )\n      ) {\n        day.cssClass = 'cal-day-selected';\n      }\n    });\n  }\n\n  hourSegmentClicked(date: Date) {\n    this.selectedDayViewDate = date;\n    this.addSelectedDayViewClass();\n  }\n\n  beforeWeekOrDayViewRender(event: CalendarWeekViewBeforeRenderEvent) {\n    this.hourColumns = event.hourColumns;\n    this.addSelectedDayViewClass();\n  }\n\n  private addSelectedDayViewClass() {\n    this.hourColumns.forEach((column) => {\n      column.hours.forEach((hourSegment) => {\n        hourSegment.segments.forEach((segment) => {\n          delete segment.cssClass;\n          if (\n            this.selectedDayViewDate &&\n            segment.date.getTime() === this.selectedDayViewDate.getTime()\n          ) {\n            segment.cssClass = 'cal-day-selected';\n          }\n        });\n      });\n    });\n  }\n}\n","<mwl-demo-utils-calendar-header [(view)]=\"view\" [(viewDate)]=\"viewDate\">\n</mwl-demo-utils-calendar-header>\n\n<div class=\"alert alert-info\">\n  Click on a month view day or a time on the week or day view to select it\n</div>\n\n<div [ngSwitch]=\"view\">\n  <mwl-calendar-month-view\n    *ngSwitchCase=\"'month'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"events\"\n    (beforeViewRender)=\"beforeMonthViewRender($event)\"\n    (dayClicked)=\"dayClicked($event.day)\"\n  >\n  </mwl-calendar-month-view>\n  <mwl-calendar-week-view\n    *ngSwitchCase=\"'week'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"events\"\n    (beforeViewRender)=\"beforeWeekOrDayViewRender($event)\"\n    (hourSegmentClicked)=\"hourSegmentClicked($event.date)\"\n  >\n  </mwl-calendar-week-view>\n  <mwl-calendar-day-view\n    *ngSwitchCase=\"'day'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"events\"\n    (beforeViewRender)=\"beforeWeekOrDayViewRender($event)\"\n    (hourSegmentClicked)=\"hourSegmentClicked($event.date)\"\n  >\n  </mwl-calendar-day-view>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"]}